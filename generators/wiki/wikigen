#!/usr/bin/env ruby

=begin
require 'simplecov'
SimpleCov.start
=end

$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), 'lib')))
require 'wiki_generator'
require 'generators/cpu_parameters'
require 'generators/disk_reservation'
require 'generators/hardware'
require 'generators/oar_properties'
require 'generators/site_hardware'
require 'generators/site_network'

GLOBAL_GENERATORS = {
  'cpu_parameters' => {
    :gen => CPUParametersGenerator,
    :page => "Generated/CPUParameters"
  },
  'disk_reservation' => { 
    :gen => DiskReservationGenerator,
    :page => 'Generated/DiskReservation'
  },
  'hardware' => {
    :gen => G5KHardwareGenerator,
    :page => 'Hardware'
  },
  'oar_properties' => {
    :gen => OarPropertiesGenerator,
    :page => 'Generated/OAR_Properties'
  }
}
SITE_GENERATORS = {
  'site_hardware' => {
    :gen => SiteHardwareGenerator,
    :page_suffix => ':Hardware'
  },
  'site_network' => {
    :gen => SiteNetworkGenerator,
    :page_suffix => ':GeneratedNetwork'
  }
}
GENERATORS = GLOBAL_GENERATORS.merge(SITE_GENERATORS)

options = WikiGenerator::parse_options
myopts = options.clone
options[:generators].each do |g|
  myopts[:generators] = [g]
  options[:sites].each do |s|
    myopts[:sites] = [s]
    if GLOBAL_GENERATORS.has_key?(g) and s == 'global'
      ret = GLOBAL_GENERATORS[g][:gen].new(GLOBAL_GENERATORS[g][:page]).exec(myopts)
    elsif SITE_GENERATORS.has_key?(g) and s != 'global'
      ret = SITE_GENERATORS[g][:gen].new(s.capitalize + SITE_GENERATORS[g][:page_suffix], s).exec(myopts)
    else
      puts "Nothing to do: #{g}/#{s}"
    end
    exit(ret)
  end
end
